{"version":3,"sources":["components/contacts.jsx","components/search.jsx","index.js"],"names":["Contacts","props","console","log","className","contacts","map","el","name","email","onClick","handleDelete","handleEdit","Search","useState","search","setSearch","useEffect","setSearchTerm","type","placeholder","onChange","events","target","value","App","setContacts","newName","setName","newEmail","setEmail","searchTerm","event","preventDefault","newContacts","findIndex","filter","toLowerCase","includes","ReactDOM","render","document","getElementById"],"mappings":"4JAmBeA,EAjBE,SAAAC,GAEb,OADIC,QAAQC,IAAIF,GAEZ,qBAAKG,UAAY,aAAjB,SACKH,EAAMI,SAASC,KAAI,SAAAC,GAChB,OACI,qBAAIH,UAAW,kBAAf,UACKG,EAAGC,KADR,IACeD,EAAGE,MACd,wBAASC,QAAW,kBAAMT,EAAMU,aAAaJ,EAAGE,QAAQL,UAAY,sBAApE,oBACA,wBAAQM,QAAW,kBAAMT,EAAMW,WAAWL,EAAGE,QAASL,UAAW,kBAAjE,2BCiBTS,EA1BC,SAAAZ,GAEZ,MAA4Ba,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KAGJC,qBAAU,WACNhB,EAAMiB,cAAcH,KACrB,CAACA,IASA,OAAO,qBAAKX,UAAY,OAAjB,SACH,uBACAe,KAAO,OACPf,UAAY,eACZgB,YAAc,kBACdC,SAZuB,SAAAC,GACvBN,EAAUM,EAAOC,OAAOC,aCP1BC,EAAM,WAER,MAAgCX,mBAAS,CACrC,CACIN,KAAM,OACNC,MAAO,kBAEX,CACID,KAAM,OACNC,MAAO,kBAEX,CACID,KAAM,QACNC,MAAO,qBAXf,mBAAOJ,EAAP,KAAiBqB,EAAjB,KAeH,EAA2BZ,mBAAS,IAApC,mBAAOa,EAAP,KAAgBC,EAAhB,KACA,EAA6Bd,mBAAS,IAAtC,mBAAOe,EAAP,KAAiBC,EAAjB,KACA,EAAoChB,mBAAU,IAA9C,mBAAOiB,EAAP,KAAmBb,EAAnB,KA+CG,OACI,sBAAKd,UAAY,YAAjB,UACI,iCACI,sBAAKA,UAAY,MAAjB,UACI,qBAAKA,UAAY,MAAjB,SACM,uBACAiB,SA1CA,SAAAW,GACtBJ,EAAQI,EAAMT,OAAOC,QA0CCL,KAAO,OACPf,UAAY,eACZgB,YAAc,OACdI,MAASG,MAGf,qBAAKvB,UAAY,MAAjB,SACI,uBACAe,KAAO,OACPE,SAhDG,SAAAW,GACvBF,EAASE,EAAMT,OAAOC,QAgDFpB,UAAY,eACZgB,YAAc,QACdI,MAASK,SAIjB,wBAAQnB,QAnDK,SAAAsB,GACxBA,EAAMC,iBACNP,EAAY,GAAD,mBAAKrB,GAAL,CAAe,CAACG,KAAMmB,EAASlB,MAAOoB,MAEjDD,EAAQ,IACRE,EAAS,KA8C0CX,KAAO,SAASf,UAAY,kBAApE,4BAEA,cAAC,EAAD,CAAQc,cAAeA,IAC3B,cAAC,EAAD,CACAN,WAtCQ,SAAAH,GACZ,IAAMyB,EAAW,YAAO7B,GAGxB6B,EAFc7B,EAAS8B,WAAU,SAAA5B,GAAE,OAAIA,EAAGE,QAASA,MAE9B,CAACD,KAAMmB,EAASlB,MAAOoB,GAE5CH,EAAYQ,GACZN,EAAQ,IACRE,EAAS,KA+BLnB,aA/CU,SAAAF,GAEdiB,EAAYrB,EAAS+B,QAAO,SAAA7B,GACxB,OAAOA,EAAGE,QAAUA,OA6CpBJ,SAzEkBA,EAAS+B,QAAO,SAAA7B,GAClC,OAAOA,EAAGC,KAAK6B,cAAcC,SAASP,IACtCxB,EAAGE,MAAM4B,cAAcC,SAASP,YA8E5CQ,IAASC,OAAO,cAAC,EAAD,IAAQC,SAASC,eAAe,W","file":"static/js/main.ee1486b4.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Contacts = props => {\r\n        console.log(props);\r\n    return (\r\n        <div className = \"list-group\">\r\n            {props.contacts.map(el => {\r\n                return (\r\n                    <li className= \"list-group-item\">\r\n                        {el.name} {el.email}\r\n                        <button  onClick = {() => props.handleDelete(el.email)} className = \"btn btn-danger mx-2\">Delete</button>\r\n                        <button onClick = {() => props.handleEdit(el.email)}  className= \"btn btn-warning\">Edit</button>\r\n                    </li>\r\n                );\r\n            })}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Contacts;\r\n","import React, {useState, useEffect} from \"react\";\r\n\r\nconst Search  = props => {\r\n\r\n    const [search, setSearch] = useState(\"\");\r\n\r\n\r\nuseEffect(() => {\r\n    props.setSearchTerm(search);\r\n}, [search]);\r\n\r\n    const handleSearchChange = events => {\r\n        setSearch(events.target.value);\r\n  \r\n\r\n\r\n    };\r\n\r\n    return <div className = \"my-4\">\r\n        <input \r\n        type = \"text\" \r\n        className = \"form-control\" \r\n        placeholder = \"Search Contacts\"\r\n        onChange = {handleSearchChange}\r\n        />   \r\n        </div>;\r\n};\r\n\r\nexport default Search;","import React, {useState} from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Contacts from \"./components/contacts\";\r\nimport Search from \"./components/search\";\r\n\r\nconst App = () => {\r\n\r\n    const [contacts, setContacts] = useState([\r\n        {\r\n            name: \"John\",\r\n            email: \"john@gmail.com\"\r\n        },\r\n        {\r\n            name: \"Carl\",\r\n            email: \"Carl@gmail.com\"\r\n        },\r\n        {\r\n            name: \"Janis\",\r\n            email: \"Janis@gmail.com\"\r\n        },\r\n    ]);\r\n\r\n const [newName, setName] = useState(\"\");\r\n const [newEmail, setEmail] = useState(\"\");\r\n const [searchTerm, setSearchTerm] = useState (\"\");\r\n\r\n const updateSearchContacts = () => {\r\n     const filteredContacts = contacts.filter(el => {\r\n            return el.name.toLowerCase().includes(searchTerm) ||\r\n            el.email.toLowerCase().includes(searchTerm);\r\n     })\r\n\r\n     return filteredContacts\r\n };\r\n\r\n const handleNameChange = event => {\r\n    setName(event.target.value);\r\n };\r\n\r\n const handleEmailChange = event => {\r\n    setEmail(event.target.value);\r\n };\r\n\r\n const handleContactSubmit = event => {\r\n     event.preventDefault();\r\n     setContacts([...contacts, {name: newName, email: newEmail}]);\r\n\r\n     setName(\"\");\r\n     setEmail(\"\");\r\n\r\n };\r\n\r\n const handleDelete = email => {\r\n\r\n        setContacts(contacts.filter(el => {\r\n            return el.email !== email;\r\n        }));\r\n\r\n };\r\n\r\n const handleEdit = email => {\r\n        const newContacts = [...contacts]\r\n        const index = contacts.findIndex(el => el.email ===email);\r\n\r\n        newContacts[index] = {name: newName, email: newEmail};\r\n\r\n        setContacts(newContacts);\r\n        setName(\"\");\r\n        setEmail(\"\");\r\n };\r\n    \r\n    return (\r\n        <div className = \"container\">\r\n            <form>\r\n                <div className = \"row\">\r\n                    <div className = \"col\">\r\n                          <input \r\n                          onChange = {handleNameChange}\r\n                          type = \"text\" \r\n                          className = \"form-control\" \r\n                          placeholder = \"Name\"\r\n                          value = {newName}\r\n                          />\r\n                    </div>\r\n                    <div className = \"col\">\r\n                        <input \r\n                        type = \"text\" \r\n                        onChange = {handleEmailChange}\r\n                        className = \"form-control\" \r\n                        placeholder = \"email\"\r\n                        value = {newEmail}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <button onClick = {handleContactSubmit} type = \"submit\" className = \"btn btn-primary\">Add Contact</button>\r\n            </form>\r\n                <Search setSearchTerm={setSearchTerm}/>\r\n            <Contacts \r\n            handleEdit = {handleEdit} \r\n            handleDelete = {handleDelete} \r\n            contacts = {updateSearchContacts()}\r\n            />\r\n\r\n        </div>  \r\n        );\r\n};\r\n\r\nReactDOM.render(<App/>, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}